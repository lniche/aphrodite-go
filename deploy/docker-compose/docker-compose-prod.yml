version: '3'

services:
  user-db:
    image: mysql:8
    hostname: user-db
    container_name: user-db
    ports:
      - 3380:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123123
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=user
      - MYSQL_PASSWORD=123123
      - TZ=Asia/Shanghai
    volumes:
      - ./data/mysql/user:/var/lib/mysql
      - ./conf/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123123"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache-redis:
    image: redis:6-alpine
    hostname: cache-redis
    volumes:
      - ./data/redis/cache/:/data
      - ./conf/redis/cache/redis.conf:/etc/redis/redis.conf
    ports:
      - 6350:6379
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  aphrodite-go:
    image: registry.cn-hangzhou.aliyuncs.com/threshold/aphrodite-go:v1
    ports:
      - 8000:8000
    depends_on:
      - cache-redis
      - user-db
    volumes:
      - ./logs/aphrodite-go:/data/app/storage/logs
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - /var/www/html:/usr/share/nginx/html
  #     - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

#docker-compose  -f ./deploy/docker-compose/docker-compose.yml up