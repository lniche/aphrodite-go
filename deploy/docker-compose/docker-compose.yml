version: '3'

services:
  # aphrodite-db:
  #   image: mysql:8
  #   container_name: aphrodite-db
  #   ports:
  #     - 3380:3306
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=123123
  #     - MYSQL_ROOT_HOST=%
  #     - MYSQL_DATABASE=test
  #     - MYSQL_PASSWORD=123123
  #     - TZ=Asia/Shanghai
  #     - LANG=en_US.UTF-8
  #   volumes:
  #     - ./data/mysql/user:/var/lib/mysql
  #     - ./conf/mysql/conf.d:/etc/mysql/conf.d
  #     # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - aphrodite-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123123"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  aphrodite-db:
    image: postgres:14
    container_name: aphrodite-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=aphrodite
      - POSTGRES_USER=aphrodite
      - POSTGRES_PASSWORD=123123
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./conf/postgres/conf.d:/etc/postgresql/conf.d
    networks:
      - aphrodite-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "aphrodite"]
      interval: 10s
      timeout: 5s
      retries: 5

  aphrodite-cache:
    image: redis:6-alpine
    container_name: aphrodite-cache
    volumes:
      - ./data/cache/:/data
      - ./conf/cache/redis.conf:/etc/redis/redis.conf
    ports:
      - 6350:6379
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    networks:
      - aphrodite-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  aphrodite-web:
    image: registry.cn-hangzhou.aliyuncs.com/threshold/aphrodite-go:v3
    container_name: aphrodite-web
    ports:
      - 8000:8000
    depends_on:
      aphrodite-cache:
        condition: service_healthy
      aphrodite-db:
        condition: service_healthy
    volumes:
      - ./logs/web:/data/app/storage/logs
      - ./config:/data/app/config
    networks:
      - aphrodite-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  aphrodite-nginx:
    image: nginx:alpine
    container_name: aphrodite-nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - aphrodite-web
    volumes:
      - ./html:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - aphrodite-network
    restart: unless-stopped

networks:
  aphrodite-network:
    driver: bridge
