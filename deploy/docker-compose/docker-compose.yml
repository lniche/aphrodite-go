version: '3'

services:
  user-db:
    image: mysql:8
    container_name: user-db
    ports:
      - 3380:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123123
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=test
      - MYSQL_PASSWORD=123123
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
    privileged: true
    volumes:
      - ./data/mysql/user:/var/lib/mysql
      - ./conf/mysql/conf.d:/etc/mysql/conf.d
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123123"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-cache:
    image: redis:6-alpine
    container_name: user-cache
    privileged: true
    volumes:
      - ./data/cache/:/data
      - ./conf/cache/redis.conf:/etc/redis/redis.conf
    ports:
      - 6350:6379
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-web:
    image: registry.cn-hangzhou.aliyuncs.com/threshold/aphrodite-go:v3
    container_name: user-web
    ports:
      - 8000:8000
    depends_on:
      user-cache:
        condition: service_healthy
      user-db:
        condition: service_healthy
    volumes:
      - ./logs/web:/data/app/storage/logs
      - ./config:/data/app/config
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./html:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
